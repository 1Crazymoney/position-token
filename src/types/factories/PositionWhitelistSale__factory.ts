/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PositionWhitelistSale,
  PositionWhitelistSaleInterface,
} from "../PositionWhitelistSale";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amountInBusd",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amountInPosi",
        type: "uint256",
      },
    ],
    name: "Purchase",
    type: "event",
  },
  {
    inputs: [],
    name: "busd",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxBuy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minBuy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "position",
    outputs: [
      {
        internalType: "contract PositionToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "purchasedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "salePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_busd",
        type: "address",
      },
    ],
    name: "setBusd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract PositionToken",
        name: "_position",
        type: "address",
      },
    ],
    name: "setPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670de0b6b3a7640000600255611388600355686c6b935b8bbd40000060045568056bc75e2d6310000060055573e9e7cea3dedca5984780bafc599bd69add087d56600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507324aefaddbaec40b5e6912b0200164b51c5b17181600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100e657600080fd5b506101036100f861010f60201b60201c565b61011760201b60201c565b600180819055506101db565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6112a9806101ea6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370db69d61161008c5780638da5cb5b116100665780638da5cb5b146101da578063d96a094a146101f8578063f2fde38b14610214578063f51f96dd14610230576100cf565b806370db69d6146101945780637107d7a6146101b2578063715018a6146101d0576100cf565b806309218e91146100d45780631c58896d146100f2578063225c13691461010e5780633ca5b2341461012a5780633ff681e41461014857806344c4dcc114610164575b600080fd5b6100dc61024e565b6040516100e99190610e48565b60405180910390f35b61010c60048036038101906101079190610c6f565b610274565b005b61012860048036038101906101239190610c98565b610334565b005b6101326103f4565b60405161013f9190610e2d565b60405180910390f35b610162600480360381019061015d9190610bf7565b61041a565b005b61017e60048036038101906101799190610bce565b610529565b60405161018b9190610ee3565b60405180910390f35b61019c610541565b6040516101a99190610ee3565b60405180910390f35b6101ba610547565b6040516101c79190610ee3565b60405180910390f35b6101d861054d565b005b6101e26105d5565b6040516101ef9190610db2565b60405180910390f35b610212600480360381019061020d9190610cc1565b6105fe565b005b61022e60048036038101906102299190610bce565b610943565b005b610238610a3b565b6040516102459190610ee3565b60405180910390f35b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61027c610a41565b73ffffffffffffffffffffffffffffffffffffffff1661029a6105d5565b73ffffffffffffffffffffffffffffffffffffffff16146102f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e790610e83565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61033c610a41565b73ffffffffffffffffffffffffffffffffffffffff1661035a6105d5565b73ffffffffffffffffffffffffffffffffffffffff16146103b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a790610e83565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610422610a41565b73ffffffffffffffffffffffffffffffffffffffff166104406105d5565b73ffffffffffffffffffffffffffffffffffffffff1614610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90610e83565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b81526004016104d1929190610e04565b602060405180830381600087803b1580156104eb57600080fd5b505af11580156104ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105239190610c46565b50505050565b60086020528060005260406000206000915090505481565b60045481565b60055481565b610555610a41565b73ffffffffffffffffffffffffffffffffffffffff166105736105d5565b73ffffffffffffffffffffffffffffffffffffffff16146105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c090610e83565b60405180910390fd5b6105d36000610a49565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026001541415610644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90610ec3565b60405180910390fd5b600260018190555060055481101580156106b157506106ad600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600454610b0d90919063ffffffff16565b8111155b6106f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e790610ea3565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161074f93929190610dcd565b602060405180830381600087803b15801561076957600080fd5b505af115801561077d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a19190610c46565b506107f481600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2390919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600061086260035461085461271085610b3990919063ffffffff16565b610b4f90919063ffffffff16565b9050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a27131f33836040518363ffffffff1660e01b81526004016108c1929190610e04565b600060405180830381600087803b1580156108db57600080fd5b505af11580156108ef573d6000803e3d6000fd5b5050505080823373ffffffffffffffffffffffffffffffffffffffff167f12cb4648cf3058b17ceeb33e579f8b0bc269fe0843f3900b8e24b6c54871703c60405160405180910390a4506001808190555050565b61094b610a41565b73ffffffffffffffffffffffffffffffffffffffff166109696105d5565b73ffffffffffffffffffffffffffffffffffffffff16146109bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b690610e83565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2690610e63565b60405180910390fd5b610a3881610a49565b50565b60035481565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183610b1b9190610ff0565b905092915050565b60008183610b319190610f0f565b905092915050565b60008183610b479190610f96565b905092915050565b60008183610b5d9190610f65565b905092915050565b600081359050610b7481611200565b92915050565b600081519050610b8981611217565b92915050565b600081359050610b9e8161122e565b92915050565b600081359050610bb381611245565b92915050565b600081359050610bc88161125c565b92915050565b600060208284031215610be057600080fd5b6000610bee84828501610b65565b91505092915050565b600080600060608486031215610c0c57600080fd5b6000610c1a86828701610b65565b9350506020610c2b86828701610b65565b9250506040610c3c86828701610bb9565b9150509250925092565b600060208284031215610c5857600080fd5b6000610c6684828501610b7a565b91505092915050565b600060208284031215610c8157600080fd5b6000610c8f84828501610b8f565b91505092915050565b600060208284031215610caa57600080fd5b6000610cb884828501610ba4565b91505092915050565b600060208284031215610cd357600080fd5b6000610ce184828501610bb9565b91505092915050565b610cf381611024565b82525050565b610d0281611090565b82525050565b610d11816110b4565b82525050565b6000610d24602683610efe565b9150610d2f82611136565b604082019050919050565b6000610d47602083610efe565b9150610d5282611185565b602082019050919050565b6000610d6a600783610efe565b9150610d75826111ae565b602082019050919050565b6000610d8d601f83610efe565b9150610d98826111d7565b602082019050919050565b610dac81611086565b82525050565b6000602082019050610dc76000830184610cea565b92915050565b6000606082019050610de26000830186610cea565b610def6020830185610cea565b610dfc6040830184610da3565b949350505050565b6000604082019050610e196000830185610cea565b610e266020830184610da3565b9392505050565b6000602082019050610e426000830184610cf9565b92915050565b6000602082019050610e5d6000830184610d08565b92915050565b60006020820190508181036000830152610e7c81610d17565b9050919050565b60006020820190508181036000830152610e9c81610d3a565b9050919050565b60006020820190508181036000830152610ebc81610d5d565b9050919050565b60006020820190508181036000830152610edc81610d80565b9050919050565b6000602082019050610ef86000830184610da3565b92915050565b600082825260208201905092915050565b6000610f1a82611086565b9150610f2583611086565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f5a57610f596110d8565b5b828201905092915050565b6000610f7082611086565b9150610f7b83611086565b925082610f8b57610f8a611107565b5b828204905092915050565b6000610fa182611086565b9150610fac83611086565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fe557610fe46110d8565b5b828202905092915050565b6000610ffb82611086565b915061100683611086565b925082821015611019576110186110d8565b5b828203905092915050565b600061102f82611066565b9050919050565b60008115159050919050565b600061104d82611024565b9050919050565b600061105f82611024565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061109b826110a2565b9050919050565b60006110ad82611066565b9050919050565b60006110bf826110c6565b9050919050565b60006110d182611066565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f21616d6f756e7400000000000000000000000000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61120981611024565b811461121457600080fd5b50565b61122081611036565b811461122b57600080fd5b50565b61123781611042565b811461124257600080fd5b50565b61124e81611054565b811461125957600080fd5b50565b61126581611086565b811461127057600080fd5b5056fea2646970667358221220e0769b6ee107d9b9f113434dcded62405ac6ff0cbc0873718b67d85628f7d70564736f6c63430008040033";

export class PositionWhitelistSale__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PositionWhitelistSale> {
    return super.deploy(overrides || {}) as Promise<PositionWhitelistSale>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PositionWhitelistSale {
    return super.attach(address) as PositionWhitelistSale;
  }
  connect(signer: Signer): PositionWhitelistSale__factory {
    return super.connect(signer) as PositionWhitelistSale__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PositionWhitelistSaleInterface {
    return new utils.Interface(_abi) as PositionWhitelistSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PositionWhitelistSale {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PositionWhitelistSale;
  }
}
